<?php

/*Добавляем заголовок, чтобы сообщить браузеру клиента, что
ответ от нашего сервера является JSON объектом.

Старайтесь писать заголовки всегда в верху скрипта.
*/
header("Content-type: Application/json");

/*Открываем сессию, чтобы работать с ней*/
session_start();


/*Создаем переменную, в которую будет помещен запрос от клиента.
Тут происходит декодирование JSON строки в обычный массив.
Данные мы получаем из входящего потока php, это сделано для того,
чтобы не писать $_POST,$_GET и тд. Важно: это стоит делать только в случае,
если на обработчик приходит JSON.
*/
$data = json_decode(file_get_contents('php://input'), true);

/*Далее получим список пользователей*/

/*Если нет файла со списком пользователей, то создадим его*/
if (!file_exists('./users.json')) {
    file_put_contents('./users.json', json_encode([]));
}
/*В переменную заносим всех пользователй.*/
$users_list = json_decode(file_get_contents('./users.json'), true);


/*
 * Если интересно, что находится в данной переменной,
 * просто расскоментируй строчку ниже*/

//print_r($users_list);

/*
 * Если интересно, что находится в данной переменной,
 * просто расскоментируй строчку ниже*/

//print_r($data);

/*Создадим переменную для хранения ответа нашего обработчика*/
$response = [];

/*Ниже мы создадим функции для обработки форм.
Рекомендую вам всегда выносить то, что можно вынести,
так, в будущем вам будет легче редактировать ваш код,
да и просто будет понятнее.
*/

/*Создадим функцию для обработки формы входа*/
function loginHandler()
{
    /*Получаем глобальную переменную, чтобы с ней работать*/
    global $data;
    global $users_list;

    /*Далее следует на первый взгляд сложная конструкция.
    На самом деле тут все просто
    */

    /*Проверяем, есть ли в списке пользователь с данным логином*/
    if (isset($users_list[$data['user_login']])) {
        /*Теперь, если он все-таки есть, то проверяем его пароль*/
        if ($users_list[$data['user_login']]['password'] === $data['user_password']) {
            /*Если пароль совпадает, то создаем сессию и возвращаем соответствующий статус*/

            /*Заносим в сессию информацию о пользователе*/
            $_SESSION['logged_user'] = ['login' => $data['user_login']];
            return [
                'status' => 'success',
            ];
        } else {
            /*Если при проверке пароля возникли какие-либо ошибки*/
            return [
                'status' => 'wrong',
                'status_text' => 'Неверный логин или пароль',
            ];
        }
    } else {
        /*Если пользователя с таким логином нет в списке пользователей*/
        return [
            'status' => 'wrong',
            'status_text' => 'Такого пользователя не существует',
        ];
    }

}

/*Создадим функцию для обработки формы регистрации*/
function registerHandler()
{
    /*Получаем глобальную переменную, чтобы с ней работать*/
    global $data;
    global $users_list;

    /*Проверяем, есть ли в списке пользователь с данным логином*/
    if (isset($users_list[$data['new_user_login']])) {
        /*Если пользователь существует, то выдаем ошибку*/
        return [
            'status' => 'alreadyExist',
            'status_text' => 'Данный пользователь уже существует, придумайте другой логин',
        ];
    } else {
        /*Если пользователя нет, то создаем его*/
        $users_list[$data['new_user_login']] = [
            'password' => $data['new_user_password']
        ];
        /*Заносим в сессию информацию о пользователе*/
        $_SESSION['logged_user'] = ['login' => $data['new_user_login']];
        file_put_contents('./users.json', json_encode($users_list));
        return [
            'status' => 'success',
        ];
    }
}

if ($data['type'] === "login") {
    $response = loginHandler();
} else {
    $response = registerHandler();
}

/*Тут мы завершаем работу нашего скрипта
 и выводим JSON строку в браузер как ответ.

Я всегда использую функцию die(), когда нужно завершить работу скрипта.
Вместо die можно написать echo или print_r, особой разницы нет,
но я использую die.
*/
die(json_encode($response));